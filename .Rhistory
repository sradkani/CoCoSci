install.packages('tidyverse')
load(tidyverse)
library(tidyverse)
library(tidyverse)
read_csv('Rdata.csv')
ggplot2()
getwd
getwd()
setwd("/Users/galraz1/Developer/CoCoSci")
read_csv('Rdata.csv')
library(tidyverse)
setwd("/Users/galraz1/Developer/CoCoSci")
df1 <- read_csv('Rdata.csv')
df2 <- read_csv('Rdata2.csv')
df1
df1 <- data.frame(read_csv('Rdata.csv'))
df1
library(tidyverse)
setwd("/Users/galraz1/Developer/CoCoSci")
df1 <- data.frame(read_csv('Rdata.csv'))
#df2 <- read_csv('Rdata2.csv')
ggplot(df1, aes(binMeans, propDisengaged)) + geom_line()
ggplot(df1, aes(binMeans, propDisengaged)) + geom_line() + theme_classic()
ggplot(df1, aes(binMeans, propDisengaged)) + geom_line()
setwd("/Users/galraz1/Developer/CoCoSci")
df1 <- data.frame(read_csv('Rdata.csv'))
ggplot(df1, aes(binMeans, propDisengaged)) + geom_line()+ geom_line()
ggplot(df1, aes(binMeans, propDisengaged)) + geom_line()+ geom_point()
df2 <- read_csv('Rdata2.csv')
ggplot(df1, aes(binMeans, propDisengaged)) + geom_line() + geom_point() + theme_classic()
df2 <- read_csv('Rdata2.csv')
df2
data.frame(read_csv('Rdata2.csv'))
ggplot(df2, aes(diffs, disengage))  + geom_point() + theme_classic()
ggplot(df2, aes(diffs, disengaged))  + geom_point() + theme_classic()
p <- ggplot(df2, aes(x=diffs, y=disengaged)) +
geom_boxplot()
p
ggplot(df2, aes(x=diffs, y=disengaged)) + geom_boxplot()
p <- ggplot(df2, aes(x=disengaged, y=diffs)) + geom_boxplot()
p
p <- ggplot(df2, aes(x=as.factor(disengaged), y=diffs)) + geom_boxplot()
p
ggplot(df1, aes(binMeans, propDisengaged)) + geom_line()+ geom_point()
curvedf <- data.frame(read_csv('curveRData.csv'))
ggplot(curves, aes(x=1:30, y=curve1)) + geom_line()
curves <- data.frame(read_csv('curveRData.csv'))
diffs <- data.frame(read_csv('diffRData.csv'))
sequences <- data.frame(read_csv('sequenceRData.csv'))
ggplot(curves, aes(x=1:30, y=curve1)) + geom_line()
ggplot(curves, aes(x=1:29, y=curve1)) + geom_line()
ggplot(curves, aes(x='AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', y=curve1)) + geom_line()
ggplot(curves, aes(x=1:29, y=curve1)) + geom_line() + xlab('AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA')
ggplot(curves, aes(x=1:29, y=curve1)) + geom_line() + title('AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA')
ggplot(curves, aes(x=1:29, y=curve1)) + geom_line() + ggtitle('AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA')
ggplot(curves, aes(x=1:29, y=curve1)) + geom_line() + ggtitle('AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA')
ggplot(curves, aes(x=1:29, y=curve1)) + geom_line() + ggtitle('AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA')
ggplot(curves, aes(x=1:29, y=curve1)) + geom_line() + ggtitle('AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA')
ggplot(curves, aes(x=1:29, y=curve1)) + geom_line() +
ggtitle('AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA') + theme(plot.title = element_text(hjust = 0.5))
ggplot(curves, aes(x=1:29, y=curve1)) + geom_line() + xlab('t') + ylab('random(x)')
ggtitle('AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA') + theme(plot.title = element_text(hjust = 0.5))
ggplot(curves, aes(x=1:29, y=curve1)) + geom_line()
+ xlab('t') + ylab('random(x)') +
ggtitle('AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA')
+ theme(plot.title = element_text(hjust = 0.5)) + theme_classic
ggplot(curves, aes(x=1:29, y=curve1)) + geom_line()
+ xlab('t') + ylab('random(x)')
+ ggtitle('AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA')
+ theme(plot.title = element_text(hjust = 0.5)) + theme_classic
ggplot(curves, aes(x=1:29, y=curve1)) + geom_line() +
xlab('t') + ylab('random(x)') +
ggtitle('AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA') +
theme(plot.title = element_text(hjust = 0.5)) + theme_classic
ggplot(curves, aes(x=1:29, y=curve1)) + geom_line() +
xlab('t') + ylab('random(x)') +
ggtitle('AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA') +
theme(plot.title = element_text(hjust = 0.5)) + theme_classic()
ggplot(curves, aes(x=1:29, y=curve1)) + geom_line() +
xlab('t') + ylab('random(x)') +
ggtitle('AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA') + theme_classic() +
theme(plot.title = element_text(hjust = 0.5))
ggplot(curves, aes(x=1:29, y=curve1)) + geom_line() +
xlab('t') + ylab('random(x)') +
ggtitle('AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA') + theme_classic() +
theme(plot.title = element_text(hjust = 0.5),
panel.grid.minor = element_blank(),
plot.title = element_text(hjust=0.5, size=14, face="bold"),
axis.title.x = element_text(hjust=0.53, size=14),
axis.title.y = element_text(size=14),
legend.title = element_text(size=14),
legend.text = element_text(size=12),
strip.text = element_text(size=12))
ggplot(curves, aes(x=1:29, y=curve1)) + geom_line() +
xlab('t') + ylab('random(x)') +
ggtitle('AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA') + theme_classic() +
theme(plot.title = element_text(hjust = 0.5),
panel.grid.minor = element_blank(),
plot.title = element_text(hjust=0.5, size=14, face="bold"),
axis.title.x = element_text(hjust=0.53, size=14),
axis.title.y = element_text(size=14),
legend.title = element_text(size=14),
legend.text = element_text(size=12),
strip.text = element_text(size=12))
ggplot(curves, aes(x=1:29, y=curve1)) + geom_line() +
xlab('t') + ylab('random(x)') +
ggtitle('AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA') + theme_classic() +
theme(plot.title = element_text(hjust = 0.5),
panel.grid.minor = element_blank(),
plot.title = element_text(hjust=0.5, size=14, face="bold"),
axis.title.x = element_text(hjust=0.53, size=14),
axis.title.y = element_text(size=14),
legend.title = element_text(size=14),
legend.text = element_text(size=12),
strip.text = element_text(size=12))
ggplot(curves, aes(x=1:29, y=curve1)) + geom_line() +
xlab('t') + ylab('random(x)') +
ggtitle('AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA') + theme_classic() +
theme(plot.title = element_text(hjust = 0.5),
panel.grid.minor = element_blank(),
plot.title = element_text(hjust=0.5, size=14, face="bold"),
axis.title.x = element_text(hjust=0.53, size=14),
axis.title.y = element_text(size=14),
legend.title = element_text(size=14),
legend.text = element_text(size=12),
strip.text = element_text(size=12))
ggplot(curves, aes(x=1:29, y=curve1)) + geom_line() +
xlab('t') + ylab('random(x)') +
ggtitle('AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA') + theme_classic() +
theme(panel.grid.minor = element_blank(),
plot.title = element_text(hjust=0.5, size=14, face="bold"),
axis.title.x = element_text(hjust=0.53, size=14),
axis.title.y = element_text(size=14),
legend.title = element_text(size=14),
legend.text = element_text(size=12),
strip.text = element_text(size=12))
ggplot(curves, aes(x=1:29, y=curve1)) + geom_line() +
xlab('t') + ylab('random(x)') +
ggtitle('AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA') + theme_gray() +
theme(panel.grid.minor = element_blank(),
plot.title = element_text(hjust=0.5, size=12, face="bold"),
axis.title.x = element_text(hjust=0.53, size=14),
axis.title.y = element_text(size=14),
legend.title = element_text(size=14),
legend.text = element_text(size=12),
strip.text = element_text(size=12))
ggplot(curves, aes(x=1:29, y=curve1)) + geom_line(size = 1.4) +
xlab('t') + ylab('random(x)') +
ggtitle('AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA') + theme_gray() +
theme(panel.grid.minor = element_blank(),
plot.title = element_text(hjust=0.5, size=12, face="bold"),
axis.title.x = element_text(hjust=0.53, size=14),
axis.title.y = element_text(size=14),
legend.title = element_text(size=14),
legend.text = element_text(size=12),
strip.text = element_text(size=12))
ggplot(curves, aes(x=1:29, y=curve1)) + geom_line(size = 1.4) +
xlab('t') + ylab('random(x)') +
ggtitle('AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA') + theme_gray() +
theme(panel.grid.minor = element_blank(),
plot.title = element_text(hjust=0.5, size=12, face="bold"),
axis.title.x = element_text(hjust=0.53, size=14, face='bold'),
axis.title.y = element_text(size=14, face='bold'),
legend.title = element_text(size=14),
legend.text = element_text(size=12),
strip.text = element_text(size=12))
ggplot(curves, aes(x=1:29, y=curve1)) + geom_line(size = 1.4) +
xlab('time') + ylab('random(x)') +
ggtitle('AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA') + theme_gray() +
theme(panel.grid.minor = element_blank(),
plot.title = element_text(hjust=0.5, size=12, face="bold"),
axis.title.x = element_text(hjust=0.53, size=14, face='bold'),
axis.title.y = element_text(size=14, face='bold'),
legend.title = element_text(size=14),
legend.text = element_text(size=12),
strip.text = element_text(size=12))
ggplot(curves, aes(x=1:29, y=curve2)) + geom_line(size = 1.4) +
xlab('time') + ylab('random(x)') +
ggtitle('AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA') + theme_gray() +
theme(panel.grid.minor = element_blank(),
plot.title = element_text(hjust=0.5, size=12, face="bold"),
axis.title.x = element_text(hjust=0.53, size=14, face='bold'),
axis.title.y = element_text(size=14, face='bold'),
legend.title = element_text(size=14),
legend.text = element_text(size=12),
strip.text = element_text(size=12))
sequences.sequence1
sequences['sequence1']
ggplot(curves, aes(x=1:29, y=curve1)) + geom_line(size = 1.4) +
xlab('time') + ylab('random(x)') +
ggtitle(sequences['sequence1']) + theme_gray() +
theme(panel.grid.minor = element_blank(),
plot.title = element_text(hjust=0.5, size=12, face="bold"),
axis.title.x = element_text(hjust=0.53, size=14, face='bold'),
axis.title.y = element_text(size=14, face='bold'),
legend.title = element_text(size=14),
legend.text = element_text(size=12),
strip.text = element_text(size=12))
sequences
sequences['sequence1']
sequences['sequence1']
sequences['sequence2']
type(sequences['sequence2'])
whos(sequences['sequence2'])
typeof(sequences['sequence2'])
typeof(sequences['sequence2'])
sequences[sequence2]
sequences['sequence2']
str_remove(sequences['sequence1'], ',"')
sequences['sequence1']
print(sequences['sequence1'])
prinstr_remove(sequences['sequence1'], ',')
t(sequences['sequence1'])
str_remove(sequences['sequence1'], ',')
str_remove(sequences['sequence1'], ',')
str_remove(sequences['sequence1'], '"')
str_remove(sequences['sequence1'], '"')
ggplot(curves, aes(x=1:29, y=curve3)) + geom_line(size = 1.4) +
xlab('time') + ylab('random(x)') +
ggtitle('CABCABCABCABCABCABCABCABCABCAB') + theme_gray() +
theme(panel.grid.minor = element_blank(),
plot.title = element_text(hjust=0.5, size=12, face="bold"),
axis.title.x = element_text(hjust=0.53, size=14, face='bold'),
axis.title.y = element_text(size=14, face='bold'),
legend.title = element_text(size=14),
legend.text = element_text(size=12),
strip.text = element_text(size=12))
ggplot(curves, aes(x=1:29, y=curve3)) + geom_line(size = 1.4) +
xlab('time') + ylab('random(x)') +
ggtitle('CABCABCABCABCABCABCABCABCABCAB') + theme_gray() +
theme(panel.grid.minor = element_blank(),
plot.title = element_text(hjust=0.5, size=14, face="bold"),
axis.title.x = element_text(hjust=0.53, size=14, face='bold'),
axis.title.y = element_text(size=14, face='bold'),
legend.title = element_text(size=14),
legend.text = element_text(size=12),
strip.text = element_text(size=12))
length('CABCABCABCABCABCABCABCABCABCAB')
x = CABCABCABCABCABCABCABCABCABCAB
x = 'CABCABCABCABCABCABCABCABCABCAB'
length(x)
x
len(x)
x = 'CABCABCABCABCABCABCABCABCABCAB'
ggplot(curves, aes(x=1:29, y=curve3)) + geom_line(size = 1.4) +
xlab('event #') + ylab('random(x)/random(x_max)') +
ggtitle('CABCABCABCABCABCABCABCABCABCAB') + theme_gray() +
theme(panel.grid.minor = element_blank(),
plot.title = element_text(hjust=0.5, size=14, face="bold"),
axis.title.x = element_text(hjust=0.53, size=14, face='bold'),
axis.title.y = element_text(size=14, face='bold'),
legend.title = element_text(size=14),
legend.text = element_text(size=12),
strip.text = element_text(size=12))
ggplot(curves, aes(x=1:29, y=curve3)) + geom_line(size = 1.4) +
xlab('event #') + ylab(expression(Production~rate~" "~mu~moles~NO[3]^{"-"}-N~Kg^{-1})) +
ggtitle('CABCABCABCABCABCABCABCABCABCAB') + theme_gray() +
theme(panel.grid.minor = element_blank(),
plot.title = element_text(hjust=0.5, size=14, face="bold"),
axis.title.x = element_text(hjust=0.53, size=14, face='bold'),
axis.title.y = element_text(size=14, face='bold'),
legend.title = element_text(size=14),
legend.text = element_text(size=12),
strip.text = element_text(size=12))
ggplot(curves, aes(x=1:29, y=curve3)) + geom_line(size = 1.4) +
xlab('event #') + ylab(expression(random(X)/random(X[max]))) +
ggtitle('CABCABCABCABCABCABCABCABCABCAB') + theme_gray() +
theme(panel.grid.minor = element_blank(),
plot.title = element_text(hjust=0.5, size=14, face="bold"),
axis.title.x = element_text(hjust=0.53, size=14, face='bold'),
axis.title.y = element_text(size=14, face='bold'),
legend.title = element_text(size=14),
legend.text = element_text(size=12),
strip.text = element_text(size=12))
ggplot(curves, aes(x=1:29, y=curve1)) + geom_line(size = 1.4) +
xlab('event #') + ylab(expression(random(X)/random(X[max]))) +
ggtitle('AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA') + theme_gray() +
theme(panel.grid.minor = element_blank(),
plot.title = element_text(hjust=0.5, size=12, face="bold"),
axis.title.x = element_text(hjust=0.53, size=14, face='bold'),
axis.title.y = element_text(size=14, face='bold'),
legend.title = element_text(size=14),
legend.text = element_text(size=12),
strip.text = element_text(size=12))
ggplot(df2, aes(diffs, disengaged))  + geom_point()
# dotplot for logistic regression
ggplot(df2, aes(diffs, disengaged))  + geom_point() +
stat_function(aes(0:0.3), fun = plogis) +
theme_classic()
ggplot(df2, aes(diffs, disengaged))  + geom_point() +
geom_smooth(method = "glm",
method.args = list(family = "binomial"),
se = FALSE) +
theme_classic()
df2 <- data.frame(read_csv('Rdata2.csv'))
mylogit <- glm(disengaged ~ diffs, data = df2, family = "binomial")
mylogit
summary(mylogit)
ggplot(df2, aes(diffs, disengaged))  + geom_point() +
geom_smooth(method = "glm",
method.args = list(family = "binomial"),
se = FALSE) + theme_gray() +
theme(panel.grid.minor = element_blank(),
plot.title = element_text(hjust=0.5, size=14, face="bold"),
axis.title.x = element_text(hjust=0.53, size=14),
axis.title.y = element_text(size=14, face='bold'),
legend.title = element_text(size=14),
legend.text = element_text(size=12),
strip.text = element_text(size=12))
ggplot(df1, aes(binMeans, propDisengaged)) + geom_line()+
geom_point() +
ggplot(df1, aes(binMeans, propDisengaged)) + geom_line()+
geom_point()
ggplot(df1, aes(binMeans, propDisengaged)) + geom_line()+
geom_point() + geom_errorbar(data=df1['stdErrorDisengaged'])
# lineplot randomXbins vs disengaged
ggplot(df1, aes(binMeans, propDisengaged)) + geom_line()+
geom_point() + geom_errorbar(data=df1, y=stdErrorDisengaged)
ggplot(df1, aes(binMeans, propDisengaged)) + geom_line()+
geom_point() + geom_errorbar(data=df1, y=stdErrorDisengaged)
