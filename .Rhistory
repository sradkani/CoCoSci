theme_classic() +
theme(panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.background = element_blank(),
plot.title = element_text(hjust=0.5, size=26, face="bold"),
axis.title.x = element_text(vjust=6, size=20),
axis.title.y = element_text(hjust=0.5, vjust =-5, size=20),
axis.text.x = element_text(vjust=10, size=14, family = 'sans'),
axis.text.y = element_text(margin = margin(l = 30), hjust = 0, size =14, family = 'sans'),
axis.line = element_blank(),
axis.ticks = element_blank())
ggplot(data, aes(X, Y, fill= rho)) +
geom_tile() + scale_fill_gradient2(low="blue", mid="blue", high="red",
limits=c(0.1, 0.9)) +
xlim(0.05, 0.95) + ylim(0.25, 0.95) + xlab(expression(alpha)) +
ylab(expression(delta)) +
theme_classic() +
theme(panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.background = element_blank(),
plot.title = element_text(hjust=0.5, size=26, face="bold"),
axis.title.x = element_text(vjust=6, size=20),
axis.title.y = element_text(hjust=0.5, vjust =-5, size=20),
axis.text.x = element_text(vjust=10, size=14, family = 'sans'),
axis.text.y = element_text(margin = margin(l = 30), hjust = 0, size =14, family = 'sans'),
axis.line = element_blank(),
axis.ticks = element_blank())
ggplot(data, aes(X, Y, fill= rho)) +
geom_tile() + scale_fill_gradient2(low="blue", mid="white", high="red",
limits=c(0.1, 0.9)) +
xlim(0.05, 0.95) + ylim(0.25, 0.95) + xlab(expression(alpha)) +
ylab(expression(delta)) +
theme_classic() +
theme(panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.background = element_blank(),
plot.title = element_text(hjust=0.5, size=26, face="bold"),
axis.title.x = element_text(vjust=6, size=20),
axis.title.y = element_text(hjust=0.5, vjust =-5, size=20),
axis.text.x = element_text(vjust=10, size=14, family = 'sans'),
axis.text.y = element_text(margin = margin(l = 30), hjust = 0, size =14, family = 'sans'),
axis.line = element_blank(),
axis.ticks = element_blank())
avg <- as.numeric(unlist(readMat('modelHumanCorr_avg.mat')))
avg
avg[avg < 0] = min(avg)
avg
each <- as.numeric(unlist(readMat('modelHumanCorr_each.mat')))
each
avg <- as.numeric(unlist(readMat('modelHumanCorr_avg.mat')))
avg[avg < 0.3] = 0.3
each <- as.numeric(unlist(readMat('modelHumanCorr_each.mat')))
each[each < 0.1] <- 0.1
# Dummy data
delta <- seq(0.25, 0.95, by=0.1)
alpha <- seq(0.05, 0.95, by=0.1)
data <- expand.grid(X=alpha, Y=delta)
data$rho <- avg
# Heatmap
ggplot(data, aes(X, Y, fill= rho)) +
geom_tile() + scale_fill_gradient2(low="blue", mid="white", high="red",
limits=c(0.1, 0.9)) +
xlim(0.05, 0.95) + ylim(0.25, 0.95) + xlab(expression(alpha)) +
ylab(expression(delta)) +
theme_classic() +
theme(panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.background = element_blank(),
plot.title = element_text(hjust=0.5, size=26, face="bold"),
axis.title.x = element_text(vjust=6, size=20),
axis.title.y = element_text(hjust=0.5, vjust =-5, size=20),
axis.text.x = element_text(vjust=10, size=14, family = 'sans'),
axis.text.y = element_text(margin = margin(l = 30), hjust = 0, size =14, family = 'sans'),
axis.line = element_blank(),
axis.ticks = element_blank())
avg
ggplot(data, aes(X, Y, fill= rho)) +
geom_tile() + scale_fill_gradient2(low="blue", mid="white", high="red") +
xlim(0.05, 0.95) + ylim(0.25, 0.95) + xlab(expression(alpha)) +
ylab(expression(delta)) +
theme_classic() +
theme(panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.background = element_blank(),
plot.title = element_text(hjust=0.5, size=26, face="bold"),
axis.title.x = element_text(vjust=6, size=20),
axis.title.y = element_text(hjust=0.5, vjust =-5, size=20),
axis.text.x = element_text(vjust=10, size=14, family = 'sans'),
axis.text.y = element_text(margin = margin(l = 30), hjust = 0, size =14, family = 'sans'),
axis.line = element_blank(),
axis.ticks = element_blank())
ggplot(data, aes(X, Y, fill= rho)) +
geom_tile() + scale_fill_gradient2(low="blue", mid="blue", high="red",
midpoint = 0.6) +
xlim(0.05, 0.95) + ylim(0.25, 0.95) + xlab(expression(alpha)) +
ylab(expression(delta)) +
theme_classic() +
theme(panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.background = element_blank(),
plot.title = element_text(hjust=0.5, size=26, face="bold"),
axis.title.x = element_text(vjust=6, size=20),
axis.title.y = element_text(hjust=0.5, vjust =-5, size=20),
axis.text.x = element_text(vjust=10, size=14, family = 'sans'),
axis.text.y = element_text(margin = margin(l = 30), hjust = 0, size =14, family = 'sans'),
axis.line = element_blank(),
axis.ticks = element_blank())
ggplot(data, aes(X, Y, fill= rho)) +
geom_tile() + scale_fill_gradient2(low="blue", mid="blue", high="red",
midpoint = 0.5) +
xlim(0.05, 0.95) + ylim(0.25, 0.95) + xlab(expression(alpha)) +
ylab(expression(delta)) +
theme_classic() +
theme(panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.background = element_blank(),
plot.title = element_text(hjust=0.5, size=26, face="bold"),
axis.title.x = element_text(vjust=6, size=20),
axis.title.y = element_text(hjust=0.5, vjust =-5, size=20),
axis.text.x = element_text(vjust=10, size=14, family = 'sans'),
axis.text.y = element_text(margin = margin(l = 30), hjust = 0, size =14, family = 'sans'),
axis.line = element_blank(),
axis.ticks = element_blank())
# Heatmap
ggplot(data, aes(X, Y, fill= rho)) +
geom_tile() + scale_fill_gradient2(low="blue", mid="blue", high="red",
midpoint = 0.6) +
xlim(0.05, 0.95) + ylim(0.25, 0.95) + xlab(expression(alpha)) +
ylab(expression(delta)) +
theme_classic() +
theme(panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.background = element_blank(),
plot.title = element_text(hjust=0.5, size=26, face="bold"),
axis.title.x = element_text(vjust=6, size=20),
axis.title.y = element_text(hjust=0.5, vjust =-5, size=20),
axis.text.x = element_text(vjust=10, size=14, family = 'sans'),
axis.text.y = element_text(margin = margin(l = 30), hjust = 0, size =14, family = 'sans'),
axis.line = element_blank(),
axis.ticks = element_blank())
ggplot(data, aes(X, Y, fill= rho)) +
geom_tile() + + scale_fill_gradient2(low="blue", mid="blue", high="red",
midpoint = 0.6) +
xlim(0.05, 0.95) + ylim(0.25, 0.95) + xlab(expression(alpha)) +
ylab(expression(delta)) +
theme_classic() +
theme(panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.background = element_blank(),
plot.title = element_text(hjust=0.5, size=26, face="bold"),
axis.title.x = element_text(vjust=6, size=20),
axis.title.y = element_text(hjust=0.5, vjust =-5, size=20),
axis.text.x = element_text(vjust=19, size=14, family = 'sans'),
axis.text.y = element_text(margin = margin(l = 30), hjust = 0, size =14, family = 'sans'),
axis.line = element_blank(),
axis.ticks = element_blank())
ggplot(data, aes(X, Y, fill= rho)) +
geom_tile() + scale_fill_gradient2(low="blue", mid="blue", high="red",
midpoint = 0.6) +
xlim(0.05, 0.95) + ylim(0.25, 0.95) + xlab(expression(alpha)) +
ylab(expression(delta)) +
theme_classic() +
theme(panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.background = element_blank(),
plot.title = element_text(hjust=0.5, size=26, face="bold"),
axis.title.x = element_text(vjust=6, size=20),
axis.title.y = element_text(hjust=0.5, vjust =-5, size=20),
axis.text.x = element_text(vjust=19, size=14, family = 'sans'),
axis.text.y = element_text(margin = margin(l = 30), hjust = 0, size =14, family = 'sans'),
axis.line = element_blank(),
axis.ticks = element_blank())
data <- expand.grid(X=alpha, Y=delta)
data$rho <- each
ggplot(data, aes(X, Y, fill= rho)) +
geom_tile() + scale_fill_gradient2(low="blue", mid="blue", high="red",
midpoint = 0.6) +
xlim(0.05, 0.95) + ylim(0.25, 0.95) + xlab(expression(alpha)) +
ylab(expression(delta)) +
theme_classic() +
theme(panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.background = element_blank(),
plot.title = element_text(hjust=0.5, size=26, face="bold"),
axis.title.x = element_text(vjust=6, size=20),
axis.title.y = element_text(hjust=0.5, vjust =-5, size=20),
axis.text.x = element_text(vjust=19, size=14, family = 'sans'),
axis.text.y = element_text(margin = margin(l = 30), hjust = 0, size =14, family = 'sans'),
axis.line = element_blank(),
axis.ticks = element_blank())
data <- expand.grid(X=alpha, Y=delta)
data$rho <- each
ggplot(data, aes(X, Y, fill= rho)) +
geom_tile() + scale_fill_gradient2(low="blue", mid="blue", high="red",
midpoint = 0.3) +
xlim(0.05, 0.95) + ylim(0.25, 0.95) + xlab(expression(alpha)) +
ylab(expression(delta)) +
theme_classic() +
theme(panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.background = element_blank(),
plot.title = element_text(hjust=0.5, size=26, face="bold"),
axis.title.x = element_text(vjust=6, size=20),
axis.title.y = element_text(hjust=0.5, vjust =-5, size=20),
axis.text.x = element_text(vjust=19, size=14, family = 'sans'),
axis.text.y = element_text(margin = margin(l = 30), hjust = 0, size =14, family = 'sans'),
axis.line = element_blank(),
axis.ticks = element_blank())
data <- expand.grid(X=alpha, Y=delta)
data$rho <- each
ggplot(data, aes(X, Y, fill= rho)) +
geom_tile() + scale_fill_gradient2(low="blue", mid="blue", high="red",
midpoint = 0.4) +
xlim(0.05, 0.95) + ylim(0.25, 0.95) + xlab(expression(alpha)) +
ylab(expression(delta)) +
theme_classic() +
theme(panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.background = element_blank(),
plot.title = element_text(hjust=0.5, size=26, face="bold"),
axis.title.x = element_text(vjust=6, size=20),
axis.title.y = element_text(hjust=0.5, vjust =-5, size=20),
axis.text.x = element_text(vjust=19, size=14, family = 'sans'),
axis.text.y = element_text(margin = margin(l = 30), hjust = 0, size =14, family = 'sans'),
axis.line = element_blank(),
axis.ticks = element_blank())
# plot for each
data <- expand.grid(X=alpha, Y=delta)
data$rho <- each
ggplot(data, aes(X, Y, fill= rho)) +
geom_tile() + scale_fill_gradient2(low="white", mid="blue", high="red",
midpoint = 0.4) +
xlim(0.05, 0.95) + ylim(0.25, 0.95) + xlab(expression(alpha)) +
ylab(expression(delta)) +
theme_classic() +
theme(panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.background = element_blank(),
plot.title = element_text(hjust=0.5, size=26, face="bold"),
axis.title.x = element_text(vjust=6, size=20),
axis.title.y = element_text(hjust=0.5, vjust =-5, size=20),
axis.text.x = element_text(vjust=19, size=14, family = 'sans'),
axis.text.y = element_text(margin = margin(l = 30), hjust = 0, size =14, family = 'sans'),
axis.line = element_blank(),
axis.ticks = element_blank())
ggplot(data, aes(X, Y, fill= rho)) +
geom_tile() + scale_fill_gradient2(low="grey", mid="blue", high="red",
midpoint = 0.4) +
xlim(0.05, 0.95) + ylim(0.25, 0.95) + xlab(expression(alpha)) +
ylab(expression(delta)) +
theme_classic() +
theme(panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.background = element_blank(),
plot.title = element_text(hjust=0.5, size=26, face="bold"),
axis.title.x = element_text(vjust=6, size=20),
axis.title.y = element_text(hjust=0.5, vjust =-5, size=20),
axis.text.x = element_text(vjust=19, size=14, family = 'sans'),
axis.text.y = element_text(margin = margin(l = 30), hjust = 0, size =14, family = 'sans'),
axis.line = element_blank(),
axis.ticks = element_blank())
ggplot(data, aes(X, Y, fill= rho)) +
geom_tile() + scale_fill_gradient2(low="grey", mid="blue", high="red",
midpoint = 0.35) +
xlim(0.05, 0.95) + ylim(0.25, 0.95) + xlab(expression(alpha)) +
ylab(expression(delta)) +
theme_classic() +
theme(panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.background = element_blank(),
plot.title = element_text(hjust=0.5, size=26, face="bold"),
axis.title.x = element_text(vjust=6, size=20),
axis.title.y = element_text(hjust=0.5, vjust =-5, size=20),
axis.text.x = element_text(vjust=19, size=14, family = 'sans'),
axis.text.y = element_text(margin = margin(l = 30), hjust = 0, size =14, family = 'sans'),
axis.line = element_blank(),
axis.ticks = element_blank())
ggplot(data, aes(X, Y, fill= rho)) +
geom_tile() + scale_fill_gradient2(low="grey", mid="blue", high="red",
midpoint = 0.4) +
xlim(0.05, 0.95) + ylim(0.25, 0.95) + xlab(expression(alpha)) +
ylab(expression(delta)) +
theme_classic() +
theme(panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.background = element_blank(),
plot.title = element_text(hjust=0.5, size=26, face="bold"),
axis.title.x = element_text(vjust=6, size=20),
axis.title.y = element_text(hjust=0.5, vjust =-5, size=20),
axis.text.x = element_text(vjust=19, size=14, family = 'sans'),
axis.text.y = element_text(margin = margin(l = 30), hjust = 0, size =14, family = 'sans'),
axis.line = element_blank(),
axis.ticks = element_blank())
ggplot(data, aes(X, Y, fill= rho)) +
geom_tile() + scale_fill_gradient2(low="grey", mid="blue", high="red",
midpoint = 0.4) +
xlim(0.05, 0.95) + ylim(0.25, 0.95) + xlab(expression(alpha)) +
ylab(expression(delta)) +
theme_classic() +
theme(panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.background = element_blank(),
plot.title = element_text(hjust=0.5, size=26, face="bold"),
axis.title.x = element_text(vjust=6, size=20),
axis.title.y = element_text(hjust=0.5, vjust =-5, size=20),
axis.text.x = element_text(vjust=14, size=14, family = 'sans'),
axis.text.y = element_text(margin = margin(l = 30), hjust = 0, size =14, family = 'sans'),
axis.line = element_blank(),
axis.ticks = element_blank())
ggplot(data, aes(X, Y, fill= rho)) +
geom_tile() + scale_fill_gradient2(low="grey", mid="blue", high="red",
midpoint = 0.4) +
xlim(0.05, 0.95) + ylim(0.25, 0.95) + xlab(expression(alpha)) +
ylab(expression(delta)) +
theme_classic() +
theme(panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.background = element_blank(),
plot.title = element_text(hjust=0.5, size=26, face="bold"),
axis.title.x = element_text(vjust=6, size=20),
axis.title.y = element_text(hjust=0.5, vjust =-5, size=20),
axis.text.x = element_text(vjust=14, size=10, family = 'sans'),
axis.text.y = element_text(margin = margin(l = 30), hjust = 0, size =14, family = 'sans'),
axis.line = element_blank(),
axis.ticks = element_blank())
ggplot(data, aes(X, Y, fill= rho)) +
geom_tile() + scale_fill_gradient2(low="grey", mid="blue", high="red",
midpoint = 0.4) +
xlim(0.05, 0.95) + ylim(0.25, 0.95) + xlab(expression(alpha)) +
ylab(expression(delta)) +
theme_classic() +
theme(panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.background = element_blank(),
plot.title = element_text(hjust=0.5, size=26, face="bold"),
axis.title.x = element_text(vjust=4, size=20),
axis.title.y = element_text(hjust=0.5, vjust =-5, size=20),
axis.text.x = element_text(vjust=12, size=10, family = 'sans'),
axis.text.y = element_text(margin = margin(l = 30), hjust = 0, size =14, family = 'sans'),
axis.line = element_blank(),
axis.ticks = element_blank())
ggplot(data, aes(X, Y, fill= rho)) +
geom_tile() + scale_fill_gradient2(low="grey", mid="blue", high="red",
midpoint = 0.4) +
xlim(0.05, 0.95) + ylim(0.25, 0.95) + xlab(expression(alpha)) +
ylab(expression(delta)) +
theme_classic() +
theme(panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.background = element_blank(),
plot.title = element_text(hjust=0.5, size=26, face="bold"),
axis.title.x = element_text(vjust=4, size=20),
axis.title.y = element_text(hjust=0.5, vjust =-5, size=20),
axis.text.x = element_text(vjust=12, size=10, family = 'sans'),
axis.text.y = element_text(margin = margin(l = 30), hjust = 0, size =10, family = 'sans'),
axis.line = element_blank(),
axis.ticks = element_blank())
ggplot(data, aes(X, Y, fill= rho)) +
geom_tile() + scale_fill_gradient2(low="grey", mid="blue", high="red",
midpoint = 0.4) +
xlim(0.05, 0.95) + ylim(0.25, 0.95) + xlab(expression(alpha)) +
ylab(expression(delta)) +
theme_classic() +
theme(panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.background = element_blank(),
plot.title = element_text(hjust=0.5, size=26, face="bold"),
axis.title.x = element_text(vjust=4, size=20),
axis.title.y = element_text(hjust=0.5, vjust =-5, size=20),
axis.text.x = element_text(vjust=12, size=10, family = 'sans'),
axis.text.y = element_text(margin = margin(l = 35), hjust = 0, size =12, family = 'sans'),
axis.line = element_blank(),
axis.ticks = element_blank())
ggplot(data, aes(X, Y, fill= rho)) +
geom_tile() + scale_fill_gradient2(low="grey", mid="blue", high="red",
midpoint = 0.4) +
xlim(0.05, 0.95) + ylim(0.25, 0.95) + xlab(expression(alpha)) +
ylab(expression(delta)) +
theme_classic() +
theme(panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.background = element_blank(),
plot.title = element_text(hjust=0.5, size=26, face="bold"),
axis.title.x = element_text(vjust=4, size=20),
axis.title.y = element_text(hjust=0.5, vjust =-5, size=20),
axis.text.x = element_text(vjust=12, size=10, family = 'sans'),
axis.text.y = element_text(margin = margin(l = 45), hjust = 0, size =12, family = 'sans'),
axis.line = element_blank(),
axis.ticks = element_blank())
ggplot(data, aes(X, Y, fill= rho)) +
geom_tile() + scale_fill_gradient2(low="grey", mid="blue", high="red",
midpoint = 0.6) +
xlim(0.05, 0.95) + ylim(0.25, 0.95) + xlab(expression(alpha)) +
ylab(expression(delta)) +
theme_classic() +
theme(panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.background = element_blank(),
plot.title = element_text(hjust=0.5, size=26, face="bold"),
axis.title.x = element_text(vjust=6, size=20),
axis.title.y = element_text(hjust=0.5, vjust =-5, size=20),
axis.text.x = element_text(vjust=10, size=14, family = 'sans'),
axis.text.y = element_text(margin = margin(l = 30), hjust = 0, size =14, family = 'sans'),
axis.line = element_blank(),
axis.ticks = element_blank())
# Dummy data
delta <- seq(0.25, 0.95, by=0.1)
alpha <- seq(0.05, 0.95, by=0.1)
data <- expand.grid(X=alpha, Y=delta)
data$rho <- avg
# Heatmap
ggplot(data, aes(X, Y, fill= rho)) +
geom_tile() + scale_fill_gradient2(low="grey", mid="blue", high="red",
midpoint = 0.6) +
xlim(0.05, 0.95) + ylim(0.25, 0.95) + xlab(expression(alpha)) +
ylab(expression(delta)) +
theme_classic() +
theme(panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.background = element_blank(),
plot.title = element_text(hjust=0.5, size=26, face="bold"),
axis.title.x = element_text(vjust=6, size=20),
axis.title.y = element_text(hjust=0.5, vjust =-5, size=20),
axis.text.x = element_text(vjust=10, size=14, family = 'sans'),
axis.text.y = element_text(margin = margin(l = 30), hjust = 0, size =14, family = 'sans'),
axis.line = element_blank(),
axis.ticks = element_blank())
data <- expand.grid(X=alpha, Y=delta)
data$rho <- each
ggplot(data, aes(X, Y, fill= rho)) +
geom_tile() + scale_fill_gradient2(low="grey", mid="blue", high="red",
midpoint = 0.4) +
xlim(0.05, 0.95) + ylim(0.25, 0.95) + xlab(expression(alpha)) +
ylab(expression(delta)) +
theme_classic() +
theme(panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.background = element_blank(),
plot.title = element_text(hjust=0.5, size=26, face="bold"),
axis.title.x = element_text(vjust=4, size=20),
axis.title.y = element_text(hjust=0.5, vjust =-5, size=20),
axis.text.x = element_text(vjust=12, size=10, family = 'sans'),
axis.text.y = element_text(margin = margin(l = 45), hjust = 0, size =12, family = 'sans'),
axis.line = element_blank(),
axis.ticks = element_blank())
ggplot(df2, aes(diffs, eventpos)) + geom_point() +
xlab(expression(Delta~random(x))) + ylab('position in sequence') +
theme_bw() +
theme(panel.grid.minor = element_blank(),
plot.title = element_text(hjust=0.5, size=26, face="bold"),
axis.title.x = element_text(hjust=0.53, size=20),
axis.title.y = element_text(size=20),
axis.text.x = element_text(size=16),
axis.text.y = element_text(size=16))
ggplot(df2, aes(eventpos, diffs)) + geom_point() +
xlab(expression(Delta~random(x))) + ylab('position in sequence') +
theme_bw() +
theme(panel.grid.minor = element_blank(),
plot.title = element_text(hjust=0.5, size=26, face="bold"),
axis.title.x = element_text(hjust=0.53, size=20),
axis.title.y = element_text(size=20),
axis.text.x = element_text(size=16),
axis.text.y = element_text(size=16))
ggplot(df2, aes(eventpos, diffs)) + geom_point() +
ylab(expression(Delta~random(x))) + xlab('position in sequence') +
theme_bw() +
theme(panel.grid.minor = element_blank(),
plot.title = element_text(hjust=0.5, size=26, face="bold"),
axis.title.x = element_text(hjust=0.53, size=20),
axis.title.y = element_text(size=20),
axis.text.x = element_text(size=16),
axis.text.y = element_text(size=16))
ggplot(df2,  aes(diffs, disengaged)) + geom_point() +
xlab(expression(Delta~random(x))) + ylab('P(disengage)') +
theme_bw() +
theme(panel.grid.minor = element_blank(),
plot.title = element_text(hjust=0.5, size=26, face="bold"),
axis.title.x = element_text(hjust=0.53, size=20),
axis.title.y = element_text(size=20),
axis.text.x = element_text(size=16),
axis.text.y = element_text(size=16))
ggplot(df2,  aes(diffs, disengaged)) + geom_point(position='jitter') +
xlab(expression(Delta~random(x))) + ylab('P(disengage)') +
theme_bw() +
theme(panel.grid.minor = element_blank(),
plot.title = element_text(hjust=0.5, size=26, face="bold"),
axis.title.x = element_text(hjust=0.53, size=20),
axis.title.y = element_text(size=20),
axis.text.x = element_text(size=16),
axis.text.y = element_text(size=16))
mylogit <- glm(disengaged ~ eventpos, data = df2, family = "binomial")
mylogit2 <- glm(disengaged ~ diffs + eventpos, data = df2, family = "binomial")
lrtest(mylogit, mylogit2)
summary(mylogit)
summary(mylogit2)
mylogit3 <- glm(disengaged ~ diffs, data = df2, family = "binomial")
summary(mylogit3)
lrtest(mylogit2, mylogit3)
mylogit <- glm(disengaged ~ eventpos, data = df2, family = "binomial")
summary(mylogit)
anova(mylogit, mylogit2)
lrtest(mylogit, mylogit2)
mylogit3 <- glm(disengaged ~ diffs, data = df2, family = "binomial")
summary(logit3)
summary(mylogit3)
lrtest(mylogit2, mylogit3)
mylogit2 <- glm(disengaged ~ eventpos + diffs, data = df2, family = "binomial")
summary(mylogit2)
mylogit2 <- glm(disengaged ~ eventpos + log(diffs), data = df2, family = "binomial")
summary(mylogit2)
mylogit2 <- glm(disengaged ~ eventpos + log(diffs), data = df2, family = "binomial")
mylogit2 <- glm(disengaged ~ eventpos + log(diffs), data = df2, family = "binomial")
